---
- name: Provision the servers
  os_server:
    cloud: "{{ openstack_cloud | default('openstack') }}"
    name: "{{ item.value.name }}"
    security_groups: "{{ item.value.security_group | default(omit) }}"
    state: "{{ item.value.state | default('present') }}"
    image: "{{ item.value.image | default('rhel-7.6') }}"
    flavor: "{{ item.value.flavor | default('m2.medium') }}"
    meta: "group={{ item.value.meta }}"
    nics:
      - net-name: int_network
    userdata: |
      #!/bin/bash
      curl -o /tmp/openstack.pub http://www.opentlc.com/download/ansible_bootcamp/openstack_keys/openstack.pub
      curl -o /tmp/openstack.pem http://www.opentlc.com/download/ansible_bootcamp/openstack_keys/openstack.pem
      cat /tmp/openstack.pub >> /home/cloud-user/.ssh/authorized_keys
      cat /tmp/openstack.pem >> /home/cloud-user/.ssh/authorized_keys
  loop: "{{ osp_servers | dict2items }}"
  register: server_instances

- name: Add floating IP
  os_floating_ip:
    cloud: "{{ openstack_cloud | default('openstack') }}"
    state: present
    reuse: yes
    server: "{{ item.server.name }}"
    network: ext_network
    wait: true
    timeout: 200
  loop: "{{ server_instances.results }} "
  register: instance_floating_ips

- name: Verify Instance IPs
  wait_for:
    host: "{{ item.floating_ip.floating_ip_address }}"
    port: 22
    search_regex: OpenSSH
    timeout: 600
  loop: "{{ instance_floating_ips.results }}"
  delegate_to: localhost